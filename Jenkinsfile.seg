pipeline {
  agent any

  options {
    timeout(time: 2, unit: 'MINUTES')
  }

  environment {
    ARTIFACT_ID = "elbuo8/webapp:${env.BUILD_NUMBER}"
  }
   stages {
   stage('Building image - GRUPO 4') {
      steps{
          sh '''
          docker build -t grupo-4:app_nexus_SEG .
             '''  
        }
    }
  
  
    stage('MOCHA tests  -    THE') {
      steps {
        sh "docker run grupo-4:app_nexus_SEG npm test"
      }
    }
   stage('Deploy Image - BEST !!!') {
      steps{
        sh '''
        whoami
        id
        docker tag grupo-4:app_nexus_SEG 127.0.0.1:8082/grupo-4:app_nexus_SEG
        docker push 127.0.0.1:8082/grupo-4:app_nexus_SEG
        '''
        }
      }
    stage('Check image DEPLOY - API Nexus') {
      steps{
        sh '''
        #curl -X GET 'gateway.docker.internal/service/rest/v1/components?repository=docker'
        curl http://gateway.docker.internal:8081/service/rest/v1/components?repository=docker
        '''
        }
      } 
   stage('Vulnerability Scan - Docker from NEXUS') {
        steps {
          sh "docker run  -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy image --severity=CRITICAL 127.0.0.1:8082/grupo-4:app_nexus_SEG"
            }
        }
    stage('Delete trivy CONTAINER') {
      steps{
        sh '''
        docker ps -a | awk '{ print $1,$2 }' | grep aquasec/trivy | awk '{print $1 }' | xargs -I {} docker rm {}
        docker container ls
           '''
        }
      }
    }
}
